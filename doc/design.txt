DESIGN:
-------

$Id: design.txt,v 1.5 2003/06/17 12:46:32 mac Exp $

Klassen:
        - Registry für DiagrammArten
        - Registry für InputKonverter
        - SVGrafZ-Zope-Produkt
        - IDiagramType + Klassen, die das Interface implementieren
        - IDiagramKind + Klassen, die das Interface implementieren

Anforderungen:
        - Es darf keine zwei DiagrammArten (diagramKind) mit gleichem Namen
          (Wert des Attributes name) geben (auch wenn sie unterschiedlichen
          DiagrammTypen zugeordnet sind). Namensdopplungen führen zu 
          RuntimeError bei der Registrierung.

        - Es gibt eine Default-DiagrammArt, diese wird benutzt, wenn keine
          DiagrammArt ausgewählt ist. Default-DiagrammArt wird die erste
          registrierte DiagrammArt, die das Interface IDefaultDiagramKind
          implementiert. Alle weiteren Versuche eine Default-DiagrammArt zu
          registrieren führen zu einem Runtime-Error.

        - Es gibt ein specialAttribute über welches einer DiagrammArt ein Wert
          übergebenwerden kann, der zwischen den DiagrammArten differieren kann.
          Wird dieses specialAttribute nicht benötigt, so sollte es None sein,
          damit es auch nicht angezeigt wird. Der Datentyp von specialAttrib
          kann ein beliebiger built-in python typ sein. Ob der Wert zum
          geforderten Datentyp passt, ist innerhalb der compute-Methode der 
          DiagrammArt zu ermitteln und gegebenenfalls ein Fehler mittels der
          Methode printError zurückzuliefern. Der Deafult des specialAttrib ist
          None.

Übersetzung nach Pixel-Grafik:
        - entweder Anzeige der SVG-Grafik oder der Pixel-Grafik, da sonst
          SVG-enabled-Users zu lange warten müssen.
        - Entscheidung über SVG- oder Pixel-Grafik anhand einer Request-
          oder Session-Variable names 'SVGrafZ_PixelMode'. Ist diese Variable
          nicht gesetzt oder hat sie den Wert 0, so werden SVG-Grafiken 
          gezeichnet ansonsten Pixel-Grafiken. Existiert im Request und in der
          Session eine Variable namens 'SVGrafZ_PixelMode', dann wird der Wert,
          der im Request steht, benutzt.
        - Nutzung von batik-rasterizer 1.5beta5 oder höher (ist zwar etwas
          langsam, funktioniert aber) siehe http://xml.apache.org/batik
        - Batik-1.5beta5 unterstützt PNG und JPEG als von jedem Browser 
          darstellbare Pixel-Grafiken
        - SVGrafZ wird nur PNGs erzeugen, da diese bei gleicher Dateigröße viel
          besser als die JPEG-Grafiken aussehen.
        - Um die Geschwindigkeit zu erhöhen (2-3faches) kann BatikServer
          eingesetzt werden.
          siehe: http://cvs.gocept.com/cgi-bin/viewcvs/viewcvs.cgi/BatikServer/

Übersetzung zum Drucken als PDF:
        - ähnlich wie Übersetzung nach Pixel-Grafik, nur folgende Unterschiede:
           + SVGrafZ_PixelMode muss im Request oder in der Session den Wert
             'pdf' haben.
           + batik-1.5beta5 beinhaltet den PDF-Konverter, also sind keine
             weiteren Pakete zu installieren.